version: "2"
services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB} 
    volumes:
      - ./data:/var/lib/postgresql/data
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    links:
      - db:db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DB_ENCRYPTION_FILE=${DB_ENCRYPTION_FILE}
      - ORCID_SERVER
      - VIRTUAL_HOST
    volumes:
      - ./orcidflask/saml:/opt/orcid_integration/orcidflask/saml
      - ./config.py:/opt/orcid_integration/config.py
      - ./orcidflask/db:/opt/orcid_integration/orcidflask/db
      #- .:/opt/orcid_integration
    restart: always
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.5
    environment:
      - LOG_JSON=true
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # Note that the nginxproxy image require cert & key to reside in the same directory
      # And to follow certain naming conventions
      - /etc/ssl/certs:/etc/nginx/certs
    restart: always
